name: Fetch All Taiwan Stock Prices

on:
  schedule:
    - cron: '*/5 * * * *'  # 每5分鐘執行一次
  workflow_dispatch:      # 允許手動觸發

jobs:
  fetch-stock:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }} # 使用自定義PAT

      - name: Create autostockprice directory
        run: mkdir -p autostockprice

      - name: Fetch all stock prices and save to txt file
        run: |
          # 設置錯誤處理
          set -e
          
          # 創建日誌文件
          echo "Starting fetch at $(date)" > autostockprice/fetch_log.txt
          
          # 獲取所有上市股票代號列表
          echo "Fetching stock list..." >> autostockprice/fetch_log.txt
          curl -s -o stock_list.json "https://openapi.twse.com.tw/v1/exchangeReport/STOCK_DAY_ALL" || {
            echo "Failed to fetch stock list" >> autostockprice/fetch_log.txt
            exit 1
          }
          
          # 檢查股票列表是否成功下載
          if [ ! -s stock_list.json ]; then
            echo "Stock list is empty or not downloaded" >> autostockprice/fetch_log.txt
            exit 1
          fi
          
          # 提取股票代號並組成查詢字串
          echo "Processing stock codes..." >> autostockprice/fetch_log.txt
          STOCK_CODES=$(jq -r '.[] | .Code' stock_list.json | tr '\n' '|' | sed 's/|$//')
          FORMATTED_CODES=$(echo "$STOCK_CODES" | sed 's/|/\n/g' | awk '{print "tse_"$1".tw"}' | tr '\n' '|')
          FINAL_CODES=${FORMATTED_CODES%|}
          
          # 檢查生成的代號字串
          echo "Number of stocks to fetch: $(echo "$STOCK_CODES" | tr '|' '\n' | wc -l)" >> autostockprice/fetch_log.txt
          
          # 獲取所有股票的即時價格並存為txt
          echo "Fetching stock prices..." >> autostockprice/fetch_log.txt
          curl -s "https://mis.twse.com.tw/stock/api/getStockInfo.jsp?ex_ch=${FINAL_CODES}&_=$(date +%s%N | cut -b1-13)" > autostockprice/all_stock_prices.txt || {
            echo "Failed to fetch stock prices" >> autostockprice/fetch_log.txt
            exit 1
          }
          
          # 檢查輸出檔案
          if [ -s autostockprice/all_stock_prices.txt ]; then
            echo "Stock prices saved successfully. File size: $(wc -c < autostockprice/all_stock_prices.txt) bytes" >> autostockprice/fetch_log.txt
          else
            echo "Output file is empty or not created" >> autostockprice/fetch_log.txt
            exit 1
          fi

      - name: Commit result
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git add autostockprice/all_stock_prices.txt autostockprice/fetch_log.txt
          git commit -m "Update all Taiwan stock prices - $(date '+%Y-%m-%d %H:%M:%S')" || echo "No changes to commit"
          git push
